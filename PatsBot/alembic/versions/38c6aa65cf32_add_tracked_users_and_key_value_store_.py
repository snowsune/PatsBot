"""Add tracked_users and key_value_store tables

Revision ID: 38c6aa65cf32
Revises: initial
Create Date: 2025-07-22 19:48:56.471339

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '38c6aa65cf32'
down_revision: Union[str, None] = 'initial'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('test',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tracked_users',
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('joined_at', sa.DateTime(), nullable=False),
    sa.Column('roles', sa.Text(), nullable=True),
    sa.Column('marked_for_removal', sa.Boolean(), nullable=False),
    sa.Column('kicked_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.drop_table('migration_log')
    op.drop_table('features')
    op.drop_table('guilds')
    # ### end Alembic commands ###

def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('guilds',
    sa.Column('guild_id', sa.BIGINT(), nullable=False),
    sa.Column('joined_at', sa.DATETIME(), nullable=True),
    sa.Column('name', sa.VARCHAR(), nullable=True),
    sa.PrimaryKeyConstraint('guild_id')
    )
    op.create_table('features',
    sa.Column('guild_id', sa.BIGINT(), nullable=False),
    sa.Column('feature_name', sa.VARCHAR(), nullable=False),
    sa.Column('enabled', sa.BOOLEAN(), nullable=True),
    sa.Column('feature_variables', sa.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['guild_id'], ['guilds.guild_id'], ),
    sa.PrimaryKeyConstraint('guild_id', 'feature_name')
    )
    op.create_table('migration_log',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('migration_name', sa.VARCHAR(), nullable=False),
    sa.Column('applied_at', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('tracked_users')
    op.drop_table('test')
    # ### end Alembic commands ### 